#!/bin/zsh
# dotfiles: collection of my personal dotfiles [code]
# Copyright (C) 2012-2017 Aleksa Sarai <cyphar@cyphar.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Enable interactive comments.
setopt interactivecomments

# Make sure that the terminal is in application mode when zle is active, since
# only then values from $terminfo are valid
if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
	function zle-line-init() {
		echoti smkx
	}

	function zle-line-finish() {
		echoti rmkx
	}

	zle -N zle-line-init
	zle -N zle-line-finish
fi

# [home] - start of line
if [[ "${terminfo[khome]}" != "" ]]; then
	bindkey "${terminfo[khome]}" beginning-of-line
fi

# [end] - end of line
if [[ "${terminfo[kend]}" != "" ]]; then
	bindkey "${terminfo[kend]}" end-of-line
fi

# [s-tab] - move through the completion menu backwards
if [[ "${terminfo[kcbt]}" != "" ]]; then
	bindkey "${terminfo[kcbt]}" reverse-menu-complete
fi

# [backspace] - delete backward
bindkey "^?" backward-delete-char

# [delete] - delete forward
if [[ "${terminfo[kdch1]}" != "" ]]; then
	bindkey "${terminfo[kdch1]}" delete-char
else
	# Fallbacks.
	bindkey "^[[3~" delete-char
	bindkey "^[3;5~" delete-char
	bindkey "\e[3~" delete-char
fi

# typing + [up-arrow] - fuzzy find history forward
if [[ "${terminfo[kcuu1]}" != ""  ]]; then
	bindkey "${terminfo[kcuu1]}" up-line-or-search
fi

# typing + [down-arrow] - fuzzy find history backward
if [[ "${terminfo[kcud1]}" != ""  ]]; then
	bindkey "${terminfo[kcud1]}" down-line-or-search
fi
