#!/bin/zsh
# dotfiles: a collection of configuration files
# Copyright (C) 2013, 2014 Cyphar

# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:

# 1. The above copyright notice and this permission notice shall be included in
#    all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Enable alias option completion.
setopt completealiases

# ls colours.
alias ls="ls --color=auto"

# ls shortcuts.
alias sl="ls"
alias ll="ls -alF"
alias la="ls -A"
alias l="ls -CF"

# grep colours.
alias grep="grep --color=auto"
alias fgrep="fgrep --color=auto"
alias egrep="egrep --color=auto"

# Make valgrind ... work.
alias valgrind="valgrind --leak-check=full --trace-children=yes"
alias vgs="valgrind --read-ver-info=yes"
alias vg="valgrind"

# Make cross-compiling go easier.
function goc() {
	# Get arch as $1.
	local __arch="$1"
	shift

	GOARCH="${__arch}" go $@
}

# Aliases for all archs.
alias go64="goc amd64"
alias go32="goc 386"
alias goarm="goc arm"

# Make setting proxies simpler.
function prox() {
	local __user=$(read -p  "username: "; echo ${REPLY})
	local __pass=$(read -sp "password: "; echo ${REPLY})

	# Deal with no newlines after `read -p`.
	echo

	local __serv=${1-$(read -p  "server: ";   echo ${REPLY})}
	local __prot=${2-$(read -p  "protocol: "; echo ${REPLY})}

	# Create proxy url.
	local __prox="${__prot}://${__user}:${__pass}@${__serv}"

	export HTTP_PROXY="${__prox}"
	export HTTPS_PROXY="${__prox}"
	export SOCKS_PROXY="${__prox}"
	export FTP_PROXY="${__prox}"
	export ALL_PROXY="${__prox}"

	export http_proxy="${__prox}"
	export https_proxy="${__prox}"
	export socks_proxy="${__prox}"
	export ftp_proxy="${__prox}"
	export all_proxy="${__prox}"
}

# Make deactivating proxies simpler.
function unprox() {
	unset HTTP_PROXY HTTPS_PROXY SOCKS_PROXY FTP_PROXY ALL_PROXY
	unset http_proxy https_proxy socks_proxy ftp_proxy all_proxy
}

# Nice relative jumps.
alias ..="cd .."
alias ..2="cd ../.."
alias ..3="cd ../../.."
alias ..4="cd ../../../.."
alias ..5="cd ../../../../.."

# Make changing directories easy.
setopt autocd
