#!/bin/zsh
# dotfiles: collection of my personal dotfiles [code]
# Copyright (C) 2012-2018 Aleksa Sarai <cyphar@cyphar.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Enable alias option completion.
setopt completealiases

# Some weird distros don't symlink vi -> vim (-> nvim). This is wrong. Also add
# an alias for "v" just for my own sanity.
alias v="vi"
alias vi="vim"
alias vim="nvim"

# ls colours.
alias ls="ls --color=auto"

# ls shortcuts.
alias sl="ls"
alias ll="ls -alF"
alias la="ls -A"
alias l="ls -CF"

# grep colours.
alias grep="grep --color=auto"
alias fgrep="fgrep --color=auto"
alias egrep="egrep --color=auto"

# Make valgrind ... work.
alias valgrind="valgrind --leak-check=full --trace-children=yes"
alias vgs="valgrind --read-ver-info=yes"
alias vg="valgrind"

# Make cross-compiling go easier.
function goc() {
	# Get arch as $1.
	local __arch="$1"
	shift

	GOARCH="${__arch}" go $@
}

# Aliases for all archs.
alias go64="goc amd64"
alias go32="goc 386"
alias goarm="goc arm"

# Make setting proxies simpler.
function prox() {
	local __user=$(read -p  "username: "; echo ${REPLY})
	local __pass=$(read -sp "password: "; echo ${REPLY})

	# Deal with no newlines after `read -p`.
	echo

	local __serv=${1-$(read -p  "server: ";   echo ${REPLY})}
	local __prot=${2-$(read -p  "protocol: "; echo ${REPLY})}

	# Create proxy url.
	local __prox="${__prot}://${__user}:${__pass}@${__serv}"

	export HTTP_PROXY="${__prox}"
	export HTTPS_PROXY="${__prox}"
	export SOCKS_PROXY="${__prox}"
	export FTP_PROXY="${__prox}"
	export ALL_PROXY="${__prox}"

	export http_proxy="${__prox}"
	export https_proxy="${__prox}"
	export socks_proxy="${__prox}"
	export ftp_proxy="${__prox}"
	export all_proxy="${__prox}"
}

# Make deactivating proxies simpler.
function unprox() {
	unset HTTP_PROXY HTTPS_PROXY SOCKS_PROXY FTP_PROXY ALL_PROXY
	unset http_proxy https_proxy socks_proxy ftp_proxy all_proxy
}

# Mess around with pico and nano.
alias pico="nano"
function nano() {
	echo "Seriously? Why don't you just use notepad.exe, MS Paint or Edlin?"
}

# Add `time` to `make`, so that we get automagical build script timing
# information, even if you forget to add `time`.
alias make="time make"

# For OBS.
alias iosc="osc -A https://api.suse.de"
alias eosc="osc -A https://api.opensuse.org"

# Nice relative jumps.
alias ..="cd .."
alias ..2="cd ../.."
alias ..3="cd ../../.."
alias ..4="cd ../../../.."
alias ..5="cd ../../../../.."

# Make changing directories easy.
setopt autocd

# Mutt mailboxes.
function _mutt_wrapper() {
	box="$1" && shift
	mkdir -p "$HOME/mail/$box"
	mbsync-helper -c "$HOME/.mbsyncrc-$box" || :
	neomutt -F "$HOME/.mutt/muttrc-$box" "$@"
	kill -9 "$(cat "$HOME/.mbsyncrc-$box.lock")"
}
alias pmutt="_mutt_wrapper personal"
alias smutt="_mutt_wrapper suse"
